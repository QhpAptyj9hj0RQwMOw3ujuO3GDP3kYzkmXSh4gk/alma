macro infix:<xx>(left, right) is equal(infix:<*>) {
    func flatten(array) {
        my result = [];
        for array -> elem {
            if elem ~~ Array {
                result = result.concat(elem);
            } else {
                result.push(elem);
            }
        }
        return result;
    }

    return quasi {
        flatten((^{{{right}}}).map(func(_) {
            return {{{left}}};
        }))
    }
}

func infix:<x>(left, right) is equal(infix:<*>) {
    return (left xx right).join("");
}

# Test string x number.
say("testing" x 2);

# Test number xx number.
my i = 0;
func foo() { i = i + 1; return i }
say(foo() xx 3);

# Test list xx number.
say([1, 2, 3] xx 2);
